<Application x:Class="Arma_Project_Manager.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Arma_Project_Manager"
             xmlns:Model="clr-namespace:Arma_Project_Manager.Model" 
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!--Image Brushes-->
        <ImageBrush x:Key="SettingsIconIdle" ImageSource="Images/SettingsIconIdle.png" Stretch="UniformToFill" RenderOptions.BitmapScalingMode="HighQuality" RenderOptions.EdgeMode="Aliased"/>
        <ImageBrush x:Key="SettingsIconActive" ImageSource="Images/SettingsIconActive.png" Stretch="UniformToFill" RenderOptions.BitmapScalingMode="HighQuality" RenderOptions.EdgeMode="Aliased"/>
        <ImageBrush x:Key="SettingsCloseIconIdle" ImageSource="Images/SettingsCloseIdle.png" Stretch="UniformToFill" RenderOptions.BitmapScalingMode="HighQuality" RenderOptions.EdgeMode="Aliased"/>
        <ImageBrush x:Key="SettingsCloseIconActive" ImageSource="Images/SettingsCloseActive.png" Stretch="UniformToFill" RenderOptions.BitmapScalingMode="HighQuality" RenderOptions.EdgeMode="Aliased"/>
        <ImageBrush x:Key="CreateNewProjectIconIdle" ImageSource="Images/CreateNewProjectIconIdle.png" Stretch="UniformToFill" RenderOptions.BitmapScalingMode="HighQuality" RenderOptions.EdgeMode="Aliased"/>
        <ImageBrush x:Key="RefreshIconIdle" ImageSource="Images/RefreshIconIdle.png" Stretch="UniformToFill" RenderOptions.BitmapScalingMode="HighQuality" RenderOptions.EdgeMode="Aliased"/>
        <ImageBrush x:Key="RefreshIconActive" ImageSource="Images/RefreshIconActive.png" Stretch="UniformToFill" RenderOptions.BitmapScalingMode="HighQuality" RenderOptions.EdgeMode="Aliased"/>
        <ImageBrush x:Key="CreateNewProjectIconActive" ImageSource="Images/CreateNewProjectIconActive.png" Stretch="UniformToFill" RenderOptions.BitmapScalingMode="HighQuality" RenderOptions.EdgeMode="Aliased"/>
        <ImageBrush x:Key="ImportProjectIconIdle" ImageSource="Images/ImportProjectIconIdle.png" Stretch="UniformToFill" RenderOptions.BitmapScalingMode="HighQuality" RenderOptions.EdgeMode="Aliased"/>
        <ImageBrush x:Key="ImportProjectIconActive" ImageSource="Images/ImportProjectIconActive.png" Stretch="UniformToFill" RenderOptions.BitmapScalingMode="HighQuality" RenderOptions.EdgeMode="Aliased"/>
        <ImageBrush x:Key="DeleteProjectIconIdle" ImageSource="Images/DeleteProjectIconIdle.png" Stretch="UniformToFill" RenderOptions.BitmapScalingMode="HighQuality" RenderOptions.EdgeMode="Aliased"/>
        <ImageBrush x:Key="DeleteProjectIconActive" ImageSource="Images/DeleteProjectIconActive.png" Stretch="UniformToFill" RenderOptions.BitmapScalingMode="HighQuality" RenderOptions.EdgeMode="Aliased"/>

        <!--Context Menu Images-->
        <Image x:Key="CPPIcon" Source="Images/ContextMenu/CPPIcon.png"/>
        <Image x:Key="CreateIcon" Source="Images/ContextMenu/CreateIcon.png"/>
        <Image x:Key="DeleteIcon" Source="Images/ContextMenu/DeleteIcon.png"/>
        <Image x:Key="EventIcon" Source="Images/ContextMenu/EventIcon.png"/>
        <Image x:Key="FileIcon" Source="Images/ContextMenu/FileIcon.png"/>
        <Image x:Key="FolderIcon" Source="Images/ContextMenu/FolderIcon.png"/>
        <Image x:Key="HPPIcon" Source="Images/ContextMenu/HPPIcon.png"/>
        <Image x:Key="OtherIcon" Source="Images/ContextMenu/Other.png"/>
        <Image x:Key="PBOIcon" Source="Images/ContextMenu/PBOIcon.png"/>
        <Image x:Key="RenameIcon" Source="Images/ContextMenu/RenameIcon.png"/>
        <Image x:Key="SQFIcon" Source="Images/ContextMenu/SQFIcon.png"/>

        <!--Solid Color Brushes-->
        <SolidColorBrush x:Key="ProgressBar.Progress" Color="#FF06B025"/>
        <SolidColorBrush x:Key="ProgressBar.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="ProgressBar.Border" Color="#FFBCBCBC"/>

        <!--Settings Button-->
        <Style x:Key="SettingsButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource SettingsIconIdle}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="1" CornerRadius="0,0,5,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource SettingsIconActive}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Create New Project Button-->
        <Style x:Key="CreateNewProjectButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource CreateNewProjectIconIdle}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="1" CornerRadius="0,0,0,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource CreateNewProjectIconActive}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Refresh Button-->
        <Style x:Key="RefreshButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource RefreshIconIdle}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="1" CornerRadius="0,0,0,5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource RefreshIconActive}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- Import Project Button-->
        <Style x:Key="ImportProjectButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource ImportProjectIconIdle}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="1" CornerRadius="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource ImportProjectIconActive}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!--Delete Project Button-->
        <Style x:Key="DeleteProjectButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource DeleteProjectIconIdle}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="1" CornerRadius="0,0,0,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource DeleteProjectIconActive}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Settings Close Button-->
        <Style x:Key="SettingsCloseButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource SettingsCloseIconIdle}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="1" CornerRadius="0,0,0,0"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource SettingsCloseIconActive}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--Title Bar Buttons-->
        <Style x:Key="TitleBarBtn" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Border.CornerRadius" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" BorderThickness="0" CornerRadius="0" Padding="0" BorderBrush="Black" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--CheckBox Style Just dont edit this ... FUCK MY LIFE ITS A BITCH-->
        <Style TargetType="CheckBox">
            <Setter Property="SnapsToDevicePixels" Value="False" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="BorderBrush" Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border"
                                    Width="30"
                                    Height="30"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="White"
                                    BorderThickness="1"
                                    CornerRadius="4,4,4,4"
                                    ClipToBounds="False">
                                    <Path x:Name="CheckMark"
                                        Width="16"
                                        Height="16"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="M 3,6 C 2,2 3,6 6,10.3 C 5,13 8,3 12,0"
                                        Stretch="UniformToFill"
                                        Stroke="#FF00BDF5"
                                        StrokeEndLineCap="Round"
                                        StrokeStartLineCap="Round"
                                        StrokeThickness="2"/>
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True" />
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" Value="White" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter Property="BorderBrush" Value="White" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="BorderBrush" Value="White" />
                                <Setter TargetName="CheckMark" Property="Stroke" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Rounded ProgressBar Templates-->
        <Style x:Key="RoundedProgressBar" TargetType="{x:Type ProgressBar}">
            <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}"/>
            <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid x:Name="TemplateRoot">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                            </PointAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="4"/>
                            <Rectangle x:Name="PART_Track"/>
                            <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" RadiusX="5" RadiusY="5"/>
                                <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RadiusX="5" RadiusY="5"/>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsIndeterminate" Value="true">
                                <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ComboBox ToggleButton-->
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="#FF00BDF5"
                  BorderBrush="#FF00BDF5"
                  BorderThickness="1" />
                <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="White" 
                  BorderBrush="White"
                  BorderThickness="0,0,1,0" />
                <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
            </Grid>
        </ControlTemplate>

        <!--ComboBox TextBox-->
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="White" />
        </ControlTemplate>

        <!--ComboBox -->
        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Foreground" Value="#FF6D7A86"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="White"
                            Foreground="#1a97c1"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">
                                <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                x:Name="DropDownBorder"
                                
                                Background="White"
                                BorderThickness="2"
                                BorderBrush="#1a97c1"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#1a97c1"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <!--ComboBoxItem -->
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="#FF6D7A86"/>
            <Setter Property="Background" Value="#1a97c1"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                              Padding="2"
                              CornerRadius="5,5,5,5"
                              SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#bdbbbb"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#1a97c1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Base Dir Item -->
        <HierarchicalDataTemplate DataType="{x:Type Model:BaseDirectoryItem}" ItemsSource="{Binding Items}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Image Width="20"
                       Height="20"
                       Source="Images/FolderIcon.png"
                       x:Name="img" />
                <TextBlock Text="{Binding Path=Name}"
                           ToolTip="{Binding Path=Path}"
                           Grid.Column="2">
                    <TextBlock.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Create" Icon="{StaticResource CreateIcon}">
                                <MenuItem Header="PBO" Icon="{StaticResource PBOIcon}" Click="CreatePBOClick" />
                            </MenuItem>
                        </ContextMenu>
                    </TextBlock.ContextMenu>
                </TextBlock>
            </Grid>
        </HierarchicalDataTemplate>

        <!-- Mission -->
        <HierarchicalDataTemplate DataType="{x:Type Model:MissionDirectoryItem}" ItemsSource="{Binding Items}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Image Width="20"
                       Height="20"
                       Source="Images/FolderIcon.png"
                       x:Name="img" />
                <TextBlock Text="{Binding Path=Name}"
                           ToolTip="{Binding Path=Path}"
                           Grid.Column="2">
                    <TextBlock.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Create" Icon="{StaticResource CreateIcon}">
                                <MenuItem Header="Folder" Icon="{StaticResource FolderIcon}" Click="CreateFolderClick"/>
                                <MenuItem Header="SQF" Icon="{StaticResource SQFIcon}" Click="CreateSQFFileClick"/>
                                <MenuItem Header="CPP" Icon="{StaticResource CPPIcon}" Click="CreateCPPFileClick"/>
                                <MenuItem Header="HPP" Icon="{StaticResource HPPIcon}" Click="CreateHPPFileClick"/>
                                <MenuItem Header="Other" Icon="{StaticResource OtherIcon}" Click="CreateOtherClick"/>
                                <MenuItem Header="Event Script" Icon="{StaticResource EventIcon}">
                                    <MenuItem Header="init" Icon="{StaticResource OtherIcon}"/>
                                    <MenuItem Header="initIntro" Icon="{StaticResource OtherIcon}"/>
                                    <MenuItem Header="initServer" Icon="{StaticResource OtherIcon}"/>
                                    <MenuItem Header="initPlayerServer" Icon="{StaticResource OtherIcon}"/>
                                    <MenuItem Header="initPlayerLocal" Icon="{StaticResource OtherIcon}"/>
                                    <MenuItem Header="onPlayerKilled" Icon="{StaticResource OtherIcon}"/>
                                    <MenuItem Header="onPlayerRespawn" Icon="{StaticResource OtherIcon}"/>
                                </MenuItem>
                            </MenuItem>
                        </ContextMenu>
                    </TextBlock.ContextMenu>
                </TextBlock>
            </Grid>
        </HierarchicalDataTemplate>

        <!-- PBO ITEM-->
        <HierarchicalDataTemplate DataType="{x:Type Model:PBODirectoryItem}" ItemsSource="{Binding Items}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Image Width="20"
                       Height="20"
                       Source="Images/FolderIcon.png"
                       x:Name="img" />
                <TextBlock Text="{Binding Path=Name}"
                           ToolTip="{Binding Path=Path}"
                           Grid.Column="2">
                    <TextBlock.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Create.." Icon="{StaticResource CreateIcon}">
                                <MenuItem Header="Folder" Icon="{StaticResource FolderIcon}" Click="CreateFolderClick"/>
                                <MenuItem Header="SQF File" Icon="{StaticResource SQFIcon}" Click="CreateSQFFileClick"/>
                                <MenuItem Header="CPP File" Icon="{StaticResource CPPIcon}" Click="CreateCPPFileClick"/>
                                <MenuItem Header="HPP File" Icon="{StaticResource HPPIcon}" Click="CreateHPPFileClick"/>
                                <MenuItem Header="Other" Icon="{StaticResource OtherIcon}" Click="CreateOtherClick"/>
                            </MenuItem>
                            <MenuItem Header="Rename" Icon="{StaticResource RenameIcon}" Click="RenameClick"/>
                            <MenuItem Header="Delete" Icon="{StaticResource DeleteIcon}" Click="DeleteClick"/>
                        </ContextMenu>
                    </TextBlock.ContextMenu>
                </TextBlock>
            </Grid>
        </HierarchicalDataTemplate>
        
        <!-- Normal Dir Item-->
        <HierarchicalDataTemplate DataType="{x:Type Model:DirectoryItem}" ItemsSource="{Binding Items}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Image Width="20"
                       Height="20"
                       Source="Images/FolderIcon.png"
                       x:Name="img" />
                <TextBlock Text="{Binding Path=Name}"
                           ToolTip="{Binding Path=Path}"
                           Grid.Column="2">
                    <TextBlock.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Create.." Icon="{StaticResource CreateIcon}">
                                <MenuItem Header="Folder" Icon="{StaticResource FolderIcon}" Click="CreateFolderClick"/>
                                <MenuItem Header="SQF File" Icon="{StaticResource SQFIcon}" Click="CreateSQFFileClick"/>
                                <MenuItem Header="CPP File" Icon="{StaticResource CPPIcon}" Click="CreateCPPFileClick"/>
                                <MenuItem Header="HPP File" Icon="{StaticResource HPPIcon}" Click="CreateHPPFileClick"/>
                                <MenuItem Header="Other" Icon="{StaticResource OtherIcon}" Click="CreateOtherClick"/>
                            </MenuItem>
                            <MenuItem Header="Rename" Icon="{StaticResource RenameIcon}" Click="RenameClick"/>
                            <MenuItem Header="Delete" Icon="{StaticResource DeleteIcon}" Click="DeleteClick"/>
                        </ContextMenu>
                    </TextBlock.ContextMenu>
                </TextBlock>
            </Grid>
        </HierarchicalDataTemplate>
        
        <!-- Normal File Item-->
        <DataTemplate DataType="{x:Type Model:FileItem}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Image Width="24"
                       Height="24"
                       Source="Images/FileIcon.png"
                       x:Name="img" />
                <TextBlock Text="{Binding Path=Name}"
                           ToolTip="{Binding Path=Path}"
                           Grid.Column="2">
                    <TextBlock.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Rename" Icon="{StaticResource RenameIcon}" Click="RenameClick"/>
                            <MenuItem Header="Delete" Icon="{StaticResource DeleteIcon}" Click="DeleteClick"/>
                        </ContextMenu>
                    </TextBlock.ContextMenu>
                </TextBlock>
            </Grid>
        </DataTemplate>
    </Application.Resources>
</Application>
